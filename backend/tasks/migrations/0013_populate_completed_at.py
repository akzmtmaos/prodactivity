# Generated by Django 5.2.3 on 2025-09-05 12:30

from django.db import migrations
from django.utils import timezone


def populate_completed_at(apps, schema_editor):
    """Populate completed_at field for existing completed tasks"""
    Task = apps.get_model('tasks', 'Task')
    
    # For existing completed tasks without completed_at, set it to updated_at
    # This is not perfect but gives us a reasonable approximation
    completed_tasks = Task.objects.filter(completed=True, completed_at__isnull=True)
    
    for task in completed_tasks:
        # Use updated_at as a proxy for when the task was completed
        # This is the best we can do without the actual completion timestamp
        task.completed_at = task.updated_at
        task.save()


def reverse_populate_completed_at(apps, schema_editor):
    """Reverse the population - set completed_at to None"""
    Task = apps.get_model('tasks', 'Task')
    Task.objects.filter(completed=True).update(completed_at=None)


class Migration(migrations.Migration):

    dependencies = [
        ('tasks', '0012_add_completed_at_field'),
    ]

    operations = [
        migrations.RunPython(populate_completed_at, reverse_populate_completed_at),
    ]
